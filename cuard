#!/usr/bin/perl
#  All search-engine specific code goes in here, so that if I switch
#  out indexers should only change stuff in here (in addition to 
#  actual indexing commands)

die "Usage: cuard QUERY TYPE\n" if ($#ARGV != 1);

my $query = $ARGV[0];
my $cineal = $ARGV[1];
my $dbdir = '/home/kps/seal/inneacs';

#my $engine='zettair';
#my $enginebin='/usr/local/bin/zet';
#my $engineopts="-f $dbdir/$cineal -n 500";
my $engine='swish-e';
my $enginebin='/usr/bin/swish-e';
my $engineopts="-f $dbdir/$cineal.index -m 500 -x '<swishtitle>\\n' -w";



local *PIPE;

my $pid = open PIPE, "-|";
die "Fork failed: $!" unless defined $pid;
unless ( $pid ) {
	exec "$enginebin $engineopts \"$query\"" or die "Could not open a pipe: $!\n";
}


my %hits;
my $total;

sub zettair_process_line
{
	(my $line) = @_;
	(my $docId, my $zindex) = $line =~ m/^[0-9]+\. ([0-9]+) .+, docid ([0-9]+)\)/;

	if (defined($docId) and defined($zindex)) {
		$hits{$docId}=$zindex;
	}
	else {
		if ($line =~ m/ results of /) {
			($total) = $line =~ m/ results of ([0-9]+) shown/;
		}
	}
}

if ($engine eq 'zettair') {
	my $line = <PIPE>;   # first line has extra "> "
	$line =~ s/^> //;
	zettair_process_line($line);
	zettair_process_line($_) while (<PIPE>);
}
elsif ($engine eq 'swish-e') {
	my $line = <PIPE>;   # SWISH format
	$line = <PIPE>;      # Search words
	$line = <PIPE>;      # Number of hits
	($total) = $line =~ m/: ([0-9]+)/;
	$line = <PIPE>;      # Search time
	$line = <PIPE>;      # Run time
	while (<PIPE>) {
		chomp;
		/^([0-9]+)-([0-9]+)$/;
		$hits{$2}=$1 if defined($2);  # last line is "." by itself
	}
}

close PIPE;

my @docs = sort {$hits{$a} <=> $hits{$b}} keys %hits;  # => sort by page rank!

print "$total\n";
print "$_\n" foreach (@docs);
exit 0;
